{"remainingRequest":"/Users/it_calvin/Desktop/my work/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/it_calvin/Desktop/my work/demo/src/components/Pagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/it_calvin/Desktop/my work/demo/src/components/Pagination.vue","mtime":1653988324367},{"path":"/Users/it_calvin/Desktop/my work/demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/it_calvin/Desktop/my work/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/it_calvin/Desktop/my work/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUGFnaW5hdGlvbicsCiAgcHJvcHM6IFsncGFnaW5hdGlvbiddLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHt9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRPcmRlcnMoY3VycmVudFBhZ2UgPSAxKSB7CiAgICAgIGNvbnN0IHZtID0gdGhpczsKICAgICAgY29uc3QgdXJsID0gYCR7cHJvY2Vzcy5lbnYuVlVFX0FQUF9BUElQQVRIfS9hcGkvJHtwcm9jZXNzLmVudi5WVUVfQVBQX0NVU1RPTVBBVEh9L2FkbWluL29yZGVycz9wYWdlPSR7Y3VycmVudFBhZ2V9YDsKICAgICAgdm0uJHN0b3JlLmRpc3BhdGNoKCJ1cGRhdGVMb2FkaW5nIiwgdHJ1ZSk7CiAgICAgIHRoaXMuJGh0dHAuZ2V0KHVybCwgdm0udGVtcFByb2R1Y3QpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgdm0ub3JkZXJzID0gcmVzcG9uc2UuZGF0YS5vcmRlcnM7CiAgICAgICAgdm0ucGFnaW5hdGlvbiA9IHJlc3BvbnNlLmRhdGEucGFnaW5hdGlvbjsKICAgICAgICB2bS4kc3RvcmUuZGlzcGF0Y2goInVwZGF0ZUxvYWRpbmciLCBmYWxzZSk7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICB9KTsKICAgIH0sCiAgICBuZXdQYWdlKHBhZ2UpewogICAgICB0aGlzLiRlbWl0KCdlbWl0UGFnZScscGFnZSkKICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgaXNMb2FkaW5nKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuaXNMb2FkaW5nOwogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pagination.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <nav aria-label=\"Page navigation example\">\n    <ul class=\"pagination\">\n      <li class=\"page-item\" :class=\"{'disabled': !pagination.has_pre }\">\n        <!-- 讓往前一頁的功能在如果當前頁面為第一頁時失效-->\n        <a\n          class=\"page-link\"\n          href=\"#\"\n          aria-label=\"Previous\"\n          @click.prevent=\"getOrders(pagination.current_page - 1)\"\n        >\n          <!-- 前往上一頁的功能就是目前的頁數減一，因此為pagination.current_page - 1 -->\n          <span aria-hidden=\"true\">&laquo;</span>\n        </a>\n      </li>\n      <!-- 使用v-for，來選擇要呈現的頁面，並綁定key使用page作為索引 -->\n      <!-- 動態綁定class來使當前頁面具有背景色 -->\n      <li\n        class=\"page-item\"\n        v-for=\"page in pagination.total_pages\"\n        :key=\"page\"\n        :class=\"{'active': pagination.current_page === page, }\"\n      >\n        <a class=\"page-link\" href=\"#\" @click.prevent=\"getOrders(page)\">{{ page }}</a>\n        <!-- 使用點擊功能觸發getProducts功能，並帶到參數指定的page頁面 -->\n      </li>\n      <li class=\"page-item\" :class=\"{'disabled': !pagination.has_next }\">\n        <!-- 讓往下一頁的功能在如果當前頁面為最後一頁時失效 -->\n        <a\n          class=\"page-link\"\n          href=\"#\"\n          aria-label=\"Next\"\n          @click.prevent=\"getOrders(pagination.current_page + 1)\"\n        >\n          <!-- 前往下一頁的功能就是目前的頁數加一，因此為pagination.current_page + 1 -->\n          <span aria-hidden=\"true\">&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'Pagination',\n  props: ['pagination'],\n  data () {\n    return {}\n  },\n  methods: {\n    getOrders(currentPage = 1) {\n      const vm = this;\n      const url = `${process.env.VUE_APP_APIPATH}/api/${process.env.VUE_APP_CUSTOMPATH}/admin/orders?page=${currentPage}`;\n      vm.$store.dispatch(\"updateLoading\", true);\n      this.$http.get(url, vm.tempProduct).then((response) => {\n        vm.orders = response.data.orders;\n        vm.pagination = response.data.pagination;\n        vm.$store.dispatch(\"updateLoading\", false);\n        console.log(response);\n      });\n    },\n    newPage(page){\n      this.$emit('emitPage',page)\n    },\n  },\n  computed: {\n    isLoading() {\n      return this.$store.state.isLoading;\n    },\n  },\n}\n</script>"]}]}