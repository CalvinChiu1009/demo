{"remainingRequest":"/Users/it_calvin/Desktop/my work/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/it_calvin/Desktop/my work/demo/src/components/pages/Orders.vue?vue&type=style&index=0&id=5c2341a6&scoped=true&lang=css&","dependencies":[{"path":"/Users/it_calvin/Desktop/my work/demo/src/components/pages/Orders.vue","mtime":1653988324369},{"path":"/Users/it_calvin/Desktop/my work/demo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/it_calvin/Desktop/my work/demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/it_calvin/Desktop/my work/demo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/it_calvin/Desktop/my work/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/it_calvin/Desktop/my work/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGgsCnRkIHsKICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmxpc3QtdW5zdHlsZWQgewogIG1hcmdpbi1ib3R0b206IDBweDsKICBwYWRkaW5nLXRvcDogNXB4OwogIHBhZGRpbmctYm90dG9tOiA1cHg7Cn0KCi5tb2RhbC13aWR0aC1jdHJsIHsKICBtYXgtd2lkdGg6IDgwMHB4Owp9Cg=="},{"version":3,"sources":["Orders.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Orders.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n  <div>\n    <Loading :active.sync=\"isLoading\"></Loading>\n    <table class=\"table mt-4\">\n      <thead>\n        <tr>\n          <th>訂單時間</th>\n          <th>購買人姓名</th>\n          <th>聯絡電話</th>\n          <th>Email</th>\n          <th>購買款項</th>\n          <th>應付金額</th>\n          <th>是否付款</th>\n          <th>詳細</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(item, key) in sortOrder\" :key=\"key\" :class=\"{'text-secondary': !item.is_paid}\">\n          <td>{{ item.create_at | date }}</td>\n          <td>{{ item.user.name }}</td>\n          <td>{{ item.user.tel }}</td>\n          <td>{{ item.user.email }}</td>\n          <td>\n            <ul class=\"list-unstyled\">\n              <li\n                v-for=\"(product, i) in item.products\"\n                :key=\"i\"\n              >{{ product.product.title }} 數量：{{ product.qty }}{{ product.product.unit }}</li>\n            </ul>\n          </td>\n          <td class=\"text-center\">{{ item.total | currency }}</td>\n          <td>\n            <strong v-if=\"item.is_paid\" class=\"text-success\">已付款</strong>\n            <span v-else class=\"text-muted\">尚未付款</span>\n          </td>\n          <td>\n            <button class=\"btn btn-outline-primary btn-sm\" @click=\"getOrder(item.id)\">內容</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- 打開訂單內容的modal -->\n    <div\n      class=\"modal fade\"\n      id=\"orderModal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-width-ctrl\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-dark text-white\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">訂單內容</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n\n          <div class=\"modal-body\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\"></div>\n              <div class=\"form-group col-sm-6\">\n                <div class=\"h5 text-dark\">訂單資訊</div>\n                <div class=\"h6 text-dark\">\n                  訂單日期：\n                  <span class=\"text-grey\">{{ order.create_at | date }}</span>\n                </div>\n                <div class=\"h6 text-dark\">\n                  訂單編號：\n                  <span class=\"text-grey\">{{ order.id }}</span>\n                </div>\n                <hr />\n\n                <div class=\"h5 text-dark\">購買產品</div>\n                <ul class=\"list-unstyling\">\n                  <li\n                    v-for=\"(product, i) in order.products\"\n                    :key=\"i\"\n                  >{{ product.product.title }} 數量：{{ product.qty }}{{ product.unit }}</li>\n                </ul>\n                <hr />\n                <div class=\"h6 text-dark\">\n                  總金額：\n                  <span class=\"text-grey\">{{ order.total | currency }}</span>\n                </div>\n                <div class=\"h6 text-dark\">\n                  付款狀態：\n                  <span class=\"text-success\" v-if=\"order.is_paid\">已完成付款</span>\n                  <span class=\"text-danger\" v-else>尚未付款</span>\n                </div>\n              </div>\n\n              <div class=\"form-group col-sm-6\">\n                <div class=\"h5 text-dark\">購買人資訊</div>\n                <div class=\"h6 text-dark\">\n                  姓名：\n                  <span class=\"text-grey\">{{ order.user.name }}</span>\n                </div>\n                <div class=\"h6 text-dark\">\n                  電話：\n                  <span class=\"text-grey\">{{ order.user.tel }}</span>\n                </div>\n                <div class=\"h6 text-dark\">\n                  信箱：\n                  <span class=\"text-grey\">{{ order.user.email }}</span>\n                </div>\n                <div class=\"h6 text-dark\">\n                  地址：\n                  <span class=\"text-grey\">{{ order.user.address }}</span>\n                </div>\n                <hr />\n                <div class=\"h5 text-dark\">購買人留言</div>\n                <div class=\"text-grey\" v-if=\"order.message\">{{ order.message }}</div>\n                <div class=\"text-muted\" v-else>-無客戶留言-</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <Pagination :pagination=\"pagination\" @emitPages=\"getOrders\"></Pagination>\n  </div>\n</template>\n\n<script>\nimport $ from \"jquery\";\nimport Pagination from \"../Pagination\";\n\nexport default {\n  name: \"Orders\",\n  data() {\n    return {\n      orders: [],\n      order: {\n        user: {\n          name: \"\",\n          tel: \"\",\n          email: \"\",\n          address: \"\",\n        },\n      },\n      isNew: false,\n      pagination: {\n        total_page: 1,\n        current_page: 1,\n        has_pre: false,\n        has_next: false,\n        category: null,\n      },\n      // isLoading: false,\n    };\n  },\n  components: {\n    Pagination,\n  },\n  methods: {\n    getOrders(currentPage = 1) {\n      const vm = this;\n      const url = `${process.env.VUE_APP_APIPATH}/api/${process.env.VUE_APP_CUSTOMPATH}/admin/orders?page=${currentPage}`;\n      vm.$store.dispatch(\"updateLoading\", true);\n      this.$http.get(url, vm.tempProduct).then((response) => {\n        vm.orders = response.data.orders;\n        vm.pagination = response.data.pagination;\n        vm.$store.dispatch(\"updateLoading\", false);\n        console.log(\"getOrders\", response);\n      });\n    },\n    getOrder(id) {\n      // 在點選查看商品的按鈕上，賦予一個顯示單一產品完整內容的功能，因此getProduct(id)跟上面不同，沒有加s\n      const vm = this;\n      const url = `${process.env.VUE_APP_APIPATH}/api/${process.env.VUE_APP_CUSTOMPATH}/order/${id}`;\n      // vm.isLoading = true; // 這邊因為是要在點擊個別的『查看商品』或『加入購物車』按鈕載入中時才要使用到fontawesome效果，不是整體頁面載入，因此這邊不用isLoading作為判斷\n      // vm.status.loadingItem = id; // 當點選以後，status.loadingItem = id，作為html中i標籤的v-if判斷式來用\n      this.$http.get(url).then((response) => {\n        vm.order = response.data.order;\n        $(\"#orderModal\").modal(\"show\"); // 在ajax行為結束並取得產品資料以後才可打開modal\n        console.log(\"getOrder\", response);\n        // vm.isLoading = false; // 同上，因為不是要整體頁面載入時出現效果，因此棄用\n        // vm.status.loadingItem = \"\"; // 讀取完成以後，將loadingItem賦予空值，以達到取消讀取動畫效果的作用\n      });\n    },\n  },\n  computed: {\n    sortOrder() {\n      const vm = this;\n      let newOrder = [];\n      if (vm.orders.length) {\n        newOrder = vm.orders.sort((a, b) => {\n          const aIsPaid = a.is_paid ? 1 : 0;\n          const bIsPaid = b.is_paid ? 1 : 0;\n          return bIsPaid - aIsPaid;\n        });\n      }\n      return newOrder;\n    },\n  },\n  computed: {\n    isLoading() {\n      return this.$store.state.isLoading; // 讀取store/index.js裡的vuex管理中的isLoading\n    },\n  },\n  created() {\n    this.getOrders();\n    console.log(process.env.VUE_APP_APIPATH);\n  },\n};\n</script>\n\n\n<style scoped>\nth,\ntd {\n  vertical-align: middle;\n  text-align: center;\n}\n\n.list-unstyled {\n  margin-bottom: 0px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n}\n\n.modal-width-ctrl {\n  max-width: 800px;\n}\n</style>\n"]}]}